{"version":3,"sources":["webpack:///./src/app/shared/addresses/address.component.html","webpack:///./src/app/shared/tables/user-table.component.html","webpack:///./src/app/shared/addresses/address.component.scss","webpack:///./src/app/shared/addresses/address.component.ts","webpack:///./src/app/shared/editors/tiny-mce.component.ts","webpack:///./src/app/shared/index.ts","webpack:///./src/app/shared/tables/user-table.component.scss","webpack:///./src/app/shared/tables/user-table.component.ts"],"names":[],"mappings":"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","file":"default~editors-editors-module~system-setup-system-setup-module~users-users-module.js","sourcesContent":["module.exports = \"<form [formGroup]=\\\"addressForm\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-control-group\\\">\\n              <label for=\\\"address-street\\\" class=\\\"label\\\">Street</label>\\n              <input\\n                    type=\\\"text\\\"\\n                    nbInput fullWidth\\n                    autocomplete=\\\"new-password\\\"\\n                    required\\n                    id=\\\"address-street\\\"\\n                    [status]=\\\"addressForm.controls['street'].invalid && addressForm.controls['street'].touched ? 'danger' : ''\\\"\\n                    formControlName=\\\"street\\\"\\n                    placeholder=\\\"Street\\\">\\n              <ng-container *ngIf=\\\"addressForm.controls['street'].invalid && addressForm.controls['street'].touched\\\">\\n                <p class=\\\"error-message\\\">\\n                  Street is required!\\n                </p>\\n              </ng-container>\\n          </div>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-control-group\\\">\\n              <label for=\\\"address-unit\\\" class=\\\"label\\\">Unit </label>\\n              <input\\n                    required\\n                    type=\\\"text\\\"\\n                    autocomplete=\\\"new-password\\\"\\n                    nbInput fullWidth\\n                    id=\\\"address-unit\\\"\\n                    [status]=\\\"addressForm.controls['unit'].invalid && addressForm.controls['unit'].touched ? 'danger' : ''\\\"\\n                    formControlName=\\\"unit\\\"\\n                    placeholder=\\\"Unit/Apartment/Suite\\\">\\n              <ng-container *ngIf=\\\"addressForm.controls['unit'].invalid && addressForm.controls['unit'].touched\\\">\\n                <p class=\\\"error-message\\\">\\n                  Unit is required!\\n                </p>\\n              </ng-container>\\n          </div>\\n      </div>\\n  </div>\\n  <div class=\\\"form-control-group\\\">\\n    <label for=\\\"address-city\\\" class=\\\"label\\\">City</label>\\n    <input\\n          required\\n          type=\\\"text\\\"\\n          autocomplete=\\\"new-password\\\"\\n          nbInput fullWidth\\n          id=\\\"address-city\\\"\\n          [status]=\\\"addressForm.controls['city'].invalid && addressForm.controls['city'].touched ? 'danger' : ''\\\"\\n          formControlName=\\\"city\\\"\\n          placeholder=\\\"City\\\">\\n    <ng-container *ngIf=\\\"addressForm.controls['city'].invalid && addressForm.controls['city'].touched\\\">\\n      <p class=\\\"error-message\\\">\\n        City is required!\\n      </p>\\n    </ng-container>\\n  </div>\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-control-group\\\">\\n              <label for=\\\"address-state\\\" class=\\\"label\\\">State</label>\\n              <input\\n                    required\\n                    type=\\\"text\\\"\\n                    autocomplete=\\\"new-password\\\"\\n                    nbInput fullWidth\\n                    id=\\\"address-state\\\"\\n                    [status]=\\\"addressForm.controls['state'].invalid && addressForm.controls['state'].touched ? 'danger' : ''\\\"\\n                    formControlName=\\\"state\\\"\\n                    placeholder=\\\"State\\\">\\n              <ng-container *ngIf=\\\"addressForm.controls['state'].invalid && addressForm.controls['state'].touched\\\">\\n                <p class=\\\"error-message\\\">\\n                  State is required!\\n                </p>\\n              </ng-container>\\n          </div>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-control-group\\\">\\n              <label for=\\\"address-state\\\" class=\\\"label\\\">Postal Code</label>\\n              <input\\n                    required\\n                    type=\\\"text\\\"\\n                    autocomplete=\\\"new-password\\\"\\n                    nbInput fullWidth\\n                    id=\\\"address-postalCode\\\"\\n                    [status]=\\\"addressForm.controls['postalCode'].invalid && addressForm.controls['postalCode'].touched ? 'danger' : ''\\\"\\n                    formControlName=\\\"postalCode\\\"\\n                    placeholder=\\\"Postal Code\\\">\\n              <ng-container *ngIf=\\\"addressForm.controls['postalCode'].invalid && addressForm.controls['postalCode'].touched\\\">\\n                <p class=\\\"error-message\\\">\\n                  State is required!\\n                </p>\\n              </ng-container>\\n          </div>\\n      </div>\\n  </div>\\n  <div class=\\\"form-control-group\\\">\\n    <label for=\\\"address-country\\\" class=\\\"label\\\">Country</label>\\n    <input\\n          type=\\\"text\\\"\\n          nbInput fullWidth\\n          autocomplete=\\\"new-password\\\"\\n          required\\n          id=\\\"address-country\\\"\\n          [status]=\\\"addressForm.controls['country'].invalid && addressForm.controls['country'].touched ? 'danger' : ''\\\"\\n          formControlName=\\\"country\\\"\\n          placeholder=\\\"Country\\\">\\n    <ng-container *ngIf=\\\"addressForm.controls['country'].invalid && addressForm.controls['country'].touched\\\">\\n      <p class=\\\"error-message\\\">\\n        Country is required!\\n      </p>\\n    </ng-container>\\n  </div>\\n</form>\\n\"","module.exports = \"<table class=\\\"table\\\" *ngIf=\\\"tableColumns.length && tableRows.length\\\">\\n    <thead>\\n      <tr>\\n        <th scope=\\\"col\\\" *ngFor=\\\"let columnName of tableColumns\\\">{{columnName}}</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let rowItem of tableRows\\\">\\n        <th scope=\\\"row\\\">{{rowItem.id}}</th>\\n        <td>{{rowItem.fullName}}</td>\\n        <td>{{rowItem.gender}}</td>\\n        <td>{{rowItem.academicDiscipline.name}}</td>\\n        <td>{{rowItem.position.name}}</td>\\n        <td>{{rowItem.numberOfCourses}}</td>\\n        <td>\\n            <nb-icon icon=\\\"star\\\" [options]=\\\"{ animation: { type: 'zoom' } }\\\"></nb-icon>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9hZGRyZXNzZXMvYWRkcmVzcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Output, Input, EventEmitter } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\n\nimport {AddressWrapper } from 'app/models/addresses';\n\n\n@Component({\n  selector: 'app-address',\n  templateUrl: 'address.component.html',\n  styleUrls: ['address.component.scss'],\n})\nexport class AddressComponent implements OnInit {\n\n  @Input() isResetForm: boolean = false;\n  @Output() onChanges: EventEmitter<AddressWrapper> = new EventEmitter();\n\n  addressForm: FormGroup;\n  addressWrapper: AddressWrapper;\n\n  constructor( private formBuilder: FormBuilder) {}\n\n  ngOnInit() {\n      this.loadAddressForm();\n  }\n\n  loadAddressForm() {\n    this.addressForm = this.formBuilder.group({\n      id: [null],\n      street: ['', Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      state: ['', Validators.required],\n      postalCode: ['', Validators.required],\n      unit: [null],\n    });\n    this.processFormChange();\n  }\n\n  processFormChange() {\n    this.addressForm.valueChanges.subscribe(value => {\n      this.addressWrapper = { address: value, isValid: this.addressForm.valid };\n      this.onChanges.emit(this.addressWrapper);\n    });\n  }\n}\n","\nimport {\n  Component,\n  OnDestroy,\n  AfterViewInit,\n  Output,\n  EventEmitter,\n  ElementRef,\n} from '@angular/core';\nimport { environment } from 'environments/environment';\n\n@Component({\n  selector: 'app-mce-editor',\n  template: '',\n})\nexport class TinyMCEComponent implements OnDestroy, AfterViewInit {\n\n  @Output() editorKeyup = new EventEmitter<any>();\n  editor: any;\n\n  constructor(private host: ElementRef) { }\n\n  ngAfterViewInit() {\n    tinymce.init({\n      target: this.host.nativeElement,\n      plugins: ['link', 'paste', 'table'],\n      skin_url: environment.END_POINTS.base + '/assets/skins/lightgray',\n      setup: (editor: any) => {\n        this.editor = editor;\n        editor.on('keyup', () => {\n          this.editorKeyup.emit(editor.getContent());\n        });\n      },\n      height: '320',\n    });\n  }\n\n  ngOnDestroy() {\n    tinymce.remove(this.editor);\n  }\n}\n","export * from './tables/user-table.component';\nexport * from './editors/tiny-mce.component';\nexport * from './addresses/address.component';\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC90YWJsZXMvdXNlci10YWJsZS5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, Input, OnDestroy} from '@angular/core';\n\n@Component({\n  selector: 'app-user-table',\n  styleUrls: ['./user-table.component.scss'],\n  templateUrl: './user-table.component.html',\n})\nexport class UserTableComponent implements OnDestroy {\n\n  @Input('columns') tableColumns: string[] = [];\n  @Input('rows') tableRows = [];\n\n  constructor() {}\n  ngOnDestroy() {}\n}\n"],"sourceRoot":""}