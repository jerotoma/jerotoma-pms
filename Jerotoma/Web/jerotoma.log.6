[2020-02-09 22:27:44.353] - 49297 INFO [restartedMain] --- org.apache.catalina.core.StandardService: Starting service [Tomcat]
[2020-02-09 22:27:44.357] - 49297 INFO [restartedMain] --- org.apache.catalina.core.StandardEngine: Starting Servlet engine: [Apache Tomcat/9.0.16]
[2020-02-09 22:27:44.380] - 49297 INFO [restartedMain] --- org.apache.catalina.core.AprLifecycleListener: The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/Users/onkomanya/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.]
[2020-02-09 22:27:44.534] - 49297 INFO [restartedMain] --- org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]: Initializing Spring embedded WebApplicationContext
[2020-02-09 22:27:45.318] - 49297 INFO [restartedMain] --- org.apache.catalina.core.StandardService: Stopping service [Tomcat]
[2020-02-09 22:27:45.326] - 49297 WARNING [restartedMain] --- org.apache.catalina.loader.WebappClassLoaderBase: The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[2020-02-09 22:27:45.328] - 49297 WARNING [restartedMain] --- org.apache.catalina.loader.WebappClassLoaderBase: The web application [ROOT] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.net.SocketInputStream.socketRead0(Native Method)
 java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
 java.net.SocketInputStream.read(SocketInputStream.java:171)
 java.net.SocketInputStream.read(SocketInputStream.java:141)
 org.postgresql.core.VisibleBufferedInputStream.readMore(VisibleBufferedInputStream.java:140)
 org.postgresql.core.VisibleBufferedInputStream.ensureBytes(VisibleBufferedInputStream.java:109)
 org.postgresql.core.VisibleBufferedInputStream.read(VisibleBufferedInputStream.java:67)
 org.postgresql.core.PGStream.receiveChar(PGStream.java:306)
 org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:499)
 org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:141)
 org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:192)
 org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49)
 org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:195)
 org.postgresql.Driver.makeConnection(Driver.java:454)
 org.postgresql.Driver.connect(Driver.java:256)
 com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
 com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
 com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
 com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
 com.zaxxer.hikari.pool.HikariPool.access$100(HikariPool.java:71)
 com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:706)
 com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:692)
 java.util.concurrent.FutureTask.run(FutureTask.java:266)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
